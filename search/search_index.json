{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Home","text":""},{"location":"#what-is-prez","title":"What is Prez?","text":"<p>Prez is a multi-part open source web application that publishes \"profiles of Knowledge Graph data\".</p> <p>Prez is most commonly used to publish:</p> <ul> <li>lists of managed vocabularies</li> <li>catalogues of semantic resources</li> <li>spatial reference datasets</li> <li>Knowledge Graph models</li> </ul> <p>The main parts of Prez are:</p> <ul> <li>Prez UI</li> <li>Prez API</li> <li>an SPARQL-compliant graph database, such as Fuseki</li> </ul>"},{"location":"#other-prez-tools","title":"Other Prez tools","text":"<p>In addition to the main Prez elements listed above, there are a series of smaller tools - scripts - that can be used to prepare Semantic Web for publication by Prez. The main one of these is:</p> <ul> <li>Prez Manifest<ul> <li>provides a series of functions to work with Knowledge Graph data within Prez </li> </ul> </li> </ul>"},{"location":"#namespace","title":"Namespace","text":"<p>This web address, <code>https://prez.dev/</code>, is also the namespace for the Prez Ontology - the Prez system's main data model.</p>"},{"location":"#show-me","title":"Show me","text":"<p>Here are some live instances of Prez online:</p> <p> </p> <p> </p> <p> </p> <p> </p> <p> </p>"},{"location":"#how-can-i-get-prez","title":"How can I get Prez?","text":"<p>While being open source, Prez is mostly maintained by KurrawongAI who provide professional services to assist with its use, see the Prez Docs.</p> <p>You can still run Prez, the API, and any other smaller Prez fools yourself by understanding how it works - see details via the link above.</p> <p>If you need help, you can contact KurrawongAI who can assist you.</p>"},{"location":"#data-models","title":"Data Models","text":"<p>Other than the software tools described above, there are also data models within Prez:</p> <ul> <li>Prez Ontology</li> <li>Prez Manifest Model<ul> <li>Prez Manifest Resource Roles vocabulary</li> </ul> </li> </ul>"},{"location":"manifest/","title":"Prez Manifest Model","text":"<p>A Prez Manifest is an RDF file that describes and links to a set of resources that can be loaded into an RDF database for Prez to provide access to.</p> <p>This page defines the Prez Manifest specification and links to relevant tools.</p> <ol> <li>The model</li> <li>Manifest Resource Roles Vocabulary</li> <li>Examples</li> <li>Tools</li> </ol>"},{"location":"manifest/#model","title":"Model","text":""},{"location":"manifest/#overview","title":"Overview","text":"<pre><code>graph LR\n  style Manifest fill:#FF90BB,stroke:#666,stroke-width:2px\n  Manifest --1:1-N--&gt; ResourceDescriptor;\n  style ResourceDescriptor fill:#FFC1DA,stroke:#666,stroke-width:2px\n  style artifact fill:#F8F8E1,stroke:#666,stroke-width:2px \n  ResourceDescriptor --1:1-N--&gt; artifact;\n  ResourceDescriptor --1:1--&gt; hasRole;\n  ResourceDescriptor --1:0-N--&gt; conformsTo;\n  ResourceDescriptor --1:0-1--&gt; additionalType;\n  ResourceDescriptor --1:0-1--&gt; sync;\n  style artifact fill:#F8F8E1,stroke:#666,stroke-width:2px  \n  artifact --1:0-N--&gt; conformsTo;\n  artifact --1:0-1--&gt; additionalType;\n  artifact --1:0-1--&gt; sync;\n  artifact --1:0-1--&gt; mainEntity;\n  artifact --1:0-1--&gt; contentLocation;\n  style artifact fill:#F8F8E1,stroke:#666,stroke-width:2px  \n  artifact --1:0-1--&gt; dateModified;\n  artifact --1:0-1--&gt; versionIRI;\n  artifact --1:0-1--&gt; version;</code></pre> <p>See Annex A: Diagram Breakdown below for a part-by-part explanation of this diagram.</p>"},{"location":"manifest/#rules","title":"Rules","text":"<ol> <li> <p>An instance of the Manifest class, <code>prez:Manifest</code>, MUST have 1 or more Resource Descriptors, <code>prof:ResourceDescriptor</code> instances, indicated by the <code>prof:hasResource</code> predicate. The Manifest instance can be identified by an IRI or a Blank Node.</p> </li> <li> <p>Each Resource Descriptor MUST have at least one <code>prof:hasArtifact</code> predicate indicating either an RDF literal resource (a string) containing the location of the artifact or a Blank Node containing the location of the artifacts indicated by the <code>schema:contentLocation</code> predicate and the main artifact IRI within that content location indicated by <code>schema:mainEntity</code>.</p> <ul> <li>See the Main Entity details below</li> </ul> </li> <li> <p>Where content location is indicated, it MUST be a file path or path pattern relative to the manifest or a URL.</p> </li> <li> <p>Each Resource Descriptor MUST also have exactly one <code>prof:hasRole</code> predicate indicating a Concept from the Manifest Resource Roles Vocabulary.</p> </li> <li> <p>Each Resource Descriptor MAY have a <code>schema:name</code> and/or a <code>schema:description</code> predicate indicating literal resources naming and describing it.</p> </li> <li> <p>A Resource, or an Artifact, MAY indicate that it (if an Artifact) or the Artifacts within it (if a Resource) conform to any number of defined Standards or Profiles of Standards, using the predicate <code>dcterms:conformsTo</code>.</p> <ul> <li>Validators can be indicated either by using \"well known\" validator IRIs or by directly indicating the validator RDF file<ul> <li>current \"well known\" are listed below and can be indicated using an IRI like this:<ul> <li><code>dcterms:conformsTo &lt;WELL-KNONW-VALIDATOR-IRI&gt; ;</code></li> </ul> </li> <li>other validators, such as <code>my-local-validator.ttl</code> or <code>http://online-validator.com/val.ttl</code> should be indicated using a literal, like this: <ul> <li><code>dcterms:conformsTo \"path/from/manifest/root/to/my-local-validator.ttl\" ;</code></li> </ul> </li> </ul> </li> <li>See the Known Validators list below</li> </ul> </li> <li> <p>A Resource, or an Artifact, MAY indicate that it (if an Artifact) or the Artifacts within it (if a Resource) is of a specific class, using the predicate <code>schema:additionalType</code></p> <ul> <li>See the Known Classes list below</li> </ul> </li> <li>A Resource, or an Artifact, MAY indicate that it should not be ignored by synchronisation tooling by setting a predicate <code>prez:sync</code> to <code>false</code><ul> <li>See the Indicating no action section below</li> </ul> </li> <li>An Artifact may have \"versioning information\" about it indicated by use of a number of known versioning predicates<ul> <li>see the Artifact Versioning section below</li> </ul> </li> </ol>"},{"location":"manifest/#known-validators","title":"Known Validators","text":"<p>The following validators can be referred to by IRI, as described above:</p> Validator IRI Scope GeoSPARQL <code>&lt;http://www.opengis.net/def/geosparql/validator&gt;</code> Spatial Objects IDN Catalogue Profile <code>&lt;https://data.idnau.org/pid/cp/validator&gt;</code> Catalogued resources containing Indigenous metadata VocPub <code>&lt;https://linked.data.gov.au/def/vocpub&gt;</code> Vocabularies"},{"location":"manifest/#known-classes","title":"Known Classes","text":"<p>Some classes of resource are commonly catalogued and, when they are, their class does not need to be indicated within a Manifest. These classes are:</p> <ul> <li><code>dcat:Resource</code></li> <li><code>dcat:Dataset</code></li> <li><code>dcat:Catalog</code></li> <li><code>owl:Ontology</code></li> <li><code>schema:CreativeWork</code></li> <li><code>schema:Dataset</code></li> <li><code>schema:DataCatalog</code></li> <li><code>skos:ConceptScheme</code></li> </ul> <p>If an Artifact, or all the Artifacts within a Resource, are not one of these types, then they can be indicated as being so by use of <code>schema:additionalType</code> like this:</p> <pre><code>[]\n    a prez:Manifest ;\n    prof:hasResource\n        # ...\n        [\n            prof:hasArtifact \"resources/*.ttl\" ;\n            prof:hasRole mrr:ResourceData ;\n            schema:additionalType &lt;{A-CLASS-IRI}&gt; ;\n        ] ,\n        # ...\n.\n</code></pre> <p>This will allow the Manifest to communicate the class of the object software should be looking for within the resource.</p>"},{"location":"manifest/#main-entity","title":"Main Entity","text":"<p>If, for some reason, a resource is neither of one of the Known Classes nore it its class able to be indicated with <code>schema:additionalType</code>, the specific IRI of the resource can be indicated using <code>schema:mainEntity</code>. This may be needed in situations where an RDF file containing a resource also contains multiple other instance of the same class.</p> <pre><code>[]\n    a prez:Manifest ;\n    prof:hasResource\n        # ...\n        [\n            prof:hasArtifact \"resources/file1.ttl\" ;\n            prof:hasRole mrr:ResourceData ;\n            schema:mainEntity &lt;{RESOURCE-IRI}&gt; ;\n        ] ,\n        # ...\n.\n</code></pre>"},{"location":"manifest/#indicating-no-action","title":"Indicating no action","text":"<p>If a Manifest wishes to list a resource but indicate it not for automatic handling by manifest tooling - perhaps it's too large to synchronise with an RDF DB - then the predicate <code>prez:sync</code> with the value <code>false</code> should be set.</p> <p>Here is an example of a Manifest indicating 4 spatial datasets, one of which is too large to sync:</p> <pre><code>[]\n    a prez:Manifest ;\n    prof:hasResource\n        [\n            prof:hasArtifact \"resources/*.ttl\" ;  # datset1.ttl, dataset2.ttl &amp; dataset3.ttl\n            prof:hasRole mrr:ResourceData ;\n        ] ,\n        [\n            prof:hasArtifact \"resources/large/dataset4.ttl\" ;\n            prof:hasRole mrr:ResourceData ;\n            prez:sync false ;\n        ] ;\n.        \n</code></pre>"},{"location":"manifest/#artifact-versioning","title":"Artifact versioning","text":"<p>An Artifact's version may be indicated by use of any or all of the following predicates:</p> <ul> <li><code>owl:versionIRI</code></li> <li><code>schema:version</code> or <code>owl:versionInfo</code></li> <li><code>schema:dateModified</code> or <code>dcterms:modified</code></li> </ul> <p>If this is done, then tools, such as prezmanifest that load and sync Manifest-described data, can obtain versioning information from a Manifest file, rather than by inspecting Artifacts' contents.</p>"},{"location":"manifest/#validation","title":"Validation","text":"<p>The validator - a file containing rules - for Manifests is given in Annex B: Manifest Validator below.</p> <p>A manifest and all its content can also be validated using the prezmanifest tool's validate function which both validates a Manifest file using the validator below and also any content for which a conformance claim is given.</p> <p>See the Tools section below for info on the prezmanifest tool.</p> <p>Additionally, any stand-alon SHACL validator can also be used to validate a Manifest. Again, see the tools section below.</p>"},{"location":"manifest/#examples","title":"Examples","text":""},{"location":"manifest/#valid","title":"Valid","text":"<p>A simple, valid, Manifest.</p> <pre><code>PREFIX mrr: &lt;https://prez.dev/ManifestResourceRoles/&gt;\nPREFIX prez: &lt;https://prez.dev/&gt;\nPREFIX prof: &lt;http://www.w3.org/ns/dx/prof/&gt;\nPREFIX schema: &lt;https://schema.org/&gt;\n\n[]\n    a prez:Manifest ;\n    prof:hasResource\n        [\n            prof:hasArtifact \"catalogue.ttl\" ;\n            prof:hasRole mrr:CatalogueData ;\n            schema:description \"The definition of, and medata for, the container which here is a dcat:Catalog object\" ;\n            schema:name \"Catalogue Definition\"\n        ] ,\n        [\n            prof:hasArtifact \"vocabs/*.ttl\" ;\n            prof:hasRole mrr:ResourceData ;\n            schema:description \"skos:ConceptsScheme objects in RDF (Turtle) files in the vocabs/ folder\" ;\n            schema:name \"Resource Data\"\n        ] ,\n        [\n            prof:hasArtifact \"https://github.com/RDFLib/prez/blob/main/prez/reference_data/profiles/ogc_records_profile.ttl\" ;\n            prof:hasRole mrr:CatalogueAndResourceModel ;\n            schema:description \"The default Prez profile for Records API\" ;\n            schema:name \"Profile Definition\"\n        ] ,\n        [\n            prof:hasArtifact \"_background/labels.ttl\" ;\n            prof:hasRole mrr:CompleteCatalogueAndResourceLabels ;\n            schema:description \"An RDF file containing all the labels for the container content\" ;\n            schema:name \"Labels\" ;\n        ] ;\n.\n</code></pre>"},{"location":"manifest/#invalid-no-role","title":"Invalid - no role","text":"<p>The second Resource Descriptor does not indicate a role as it is commented out.</p> <pre><code>PREFIX mrr: &lt;https://prez.dev/ManifestResourceRoles/&gt;\nPREFIX prez: &lt;https://prez.dev/&gt;\nPREFIX prof: &lt;http://www.w3.org/ns/dx/prof/&gt;\nPREFIX schema: &lt;https://schema.org/&gt;\n\n[]\n    a prez:Manifest ;\n    prof:hasResource\n        [\n            prof:hasArtifact \"catalogue.ttl\" ;\n            prof:hasRole mrr:CatalogueData ;\n            schema:description \"The definition of, and medata for, the container which here is a dcat:Catalog object\" ;\n            schema:name \"Catalogue Definition\"\n        ] ,\n        [\n            prof:hasArtifact \"vocabs/*.ttl\" ;\n            # prof:hasRole mrr:ResourceData ;\n            schema:description \"skos:ConceptsScheme objects in RDF (Turtle) files in the vocabs/ folder\" ;\n            schema:name \"Content Data\"\n        ] ,\n        [\n            prof:hasArtifact \"https://github.com/RDFLib/prez/blob/main/prez/reference_data/profiles/ogc_records_profile.ttl\" ;\n            prof:hasRole mrr:CatalogueAndResourceModel ;\n            schema:description \"The default Prez profile for Records API\" ;\n            schema:name \"Profile Definition\"\n        ] ,\n        [\n            prof:hasArtifact \"_background/labels.ttl\" ;\n            prof:hasRole mrr:CompleteCatalogueAndResourceLabels ;\n            schema:description \"An RDF file containing all the labels for the container content\" ;\n            schema:name \"Labels\" ;\n        ] ;\n.\n</code></pre>"},{"location":"manifest/#invalid-bad-location","title":"Invalid - bad location","text":"<p>The third resource specifies an invalid location, the non-existent web address of https://github.com/RDFLib/prez/blob/main/prez/reference_data/profiles/ogc_records_profile.ttlx which has had an extra 'x' added at the end.</p> <pre><code>PREFIX mrr: &lt;https://prez.dev/ManifestResourceRoles/&gt;\nPREFIX prez: &lt;https://prez.dev/&gt;\nPREFIX prof: &lt;http://www.w3.org/ns/dx/prof/&gt;\nPREFIX schema: &lt;https://schema.org/&gt;\n\n[]\n    a prez:Manifest ;\n    prof:hasResource\n        [\n            prof:hasArtifact \"catalogue.ttl\" ;\n            prof:hasRole mrr:CatalogueData ;\n            schema:description \"The definition of, and medata for, the container which here is a dcat:Catalog object\" ;\n            schema:name \"Catalogue Definition\"\n        ] ,\n        [\n            prof:hasArtifact \"vocabs/*.ttl\" ;\n            prof:hasRole mrr:ResourceData ;\n            schema:description \"skos:ConceptsScheme objects in RDF (Turtle) files in the vocabs/ folder\" ;\n            schema:name \"Content Data\"\n        ] ,\n        [\n            prof:hasArtifact \"https://github.com/RDFLib/prez/blob/main/prez/reference_data/profiles/ogc_records_profile.ttlx\" ;\n            prof:hasRole mrr:CatalogueAndResourceModel ;\n            schema:description \"The default Prez profile for Records API\" ;\n            schema:name \"Profile Definition\"\n        ] ,\n        [\n            prof:hasArtifact \"_background/labels.ttl\" ;\n            prof:hasRole mrr:CompleteCatalogueAndResourceLabels ;\n            schema:description \"An RDF file containing all the labels for the container content\" ;\n            schema:name \"Labels\" ;\n        ] ;\n.\n</code></pre>"},{"location":"manifest/#mainentity-use","title":"<code>mainEntity</code> use","text":"<p>A snippet of a Manifest - just one value for <code>hasResource</code> - showing use of <code>mainEntity</code> and <code>contentLocation</code> instead of just a literal file path.</p> <pre><code>    [\n        prof:hasArtifact\n            [\n                schema:contentLocation \"vocabs/image-test.ttl\" ;\n                schema:mainEntity &lt;https://example.com/demo-vocabs/image-test&gt; ;\n            ] ,\n            \"vocabs/language-test.ttl\" ;\n        prof:hasRole mrr:ResourceData ;\n        schema:description \"skos:ConceptScheme objects in RDF (Turtle) files in the vocabs/ folder\" ;\n        schema:name \"Resource Data\"\n    ] ,\n</code></pre>"},{"location":"manifest/#conformance-claim-single","title":"conformance claim - single","text":"<p>A single artifact claiming conformance to the VocPub Profile of SKOS.</p> <pre><code>    prof:hasArtifact\n        [\n            schema:contentLocation \"vocabs/image-test.ttl\" ;\n            schema:mainEntity &lt;https://example.com/demo-vocabs/image-test&gt; ;\n            dcterms:conformsTo &lt;https://linked.data.gov.au/def/vocpub&gt; ;\n        ] ,\n</code></pre>"},{"location":"manifest/#conformance-claim-all","title":"conformance claim - all","text":"<p>A single Resource in a Manifest claiming conformance to the VocPub Profile of SKOS for all artifacts (there are 3 given).</p> <pre><code>    [\n        prof:hasArtifact\n            [\n                schema:contentLocation \"vocabs/image-test.ttl\" ;\n                schema:mainEntity &lt;https://example.com/demo-vocabs/image-test&gt; ;\n            ] ,\n            \"vocabs/language-test.ttl\" ;\n            \"vocabs/other-vocab.ttl\" ;\n        prof:hasRole mrr:ResourceData ;\n        # ...\n        dcterms:conformsTo &lt;https://linked.data.gov.au/def/vocpub&gt; ;\n    ] ,\n</code></pre>"},{"location":"manifest/#conformance-claim-supplied-validator","title":"conformance claim - supplied validator","text":"<p>To indicate a validator stored in a local file, <code>my-local-validator.ttl</code>:</p> <pre><code>    [\n        prof:hasArtifact\n            [\n                schema:contentLocation \"vocabs/image-test.ttl\" ;\n                schema:mainEntity &lt;https://example.com/demo-vocabs/image-test&gt; ;\n            ] ,\n            \"vocabs/language-test.ttl\" ;\n            \"vocabs/other-vocab.ttl\" ;\n        prof:hasRole mrr:ResourceData ;\n        # ...\n        dcterms:conformsTo \"path/to/my-local-validator.ttl\" ;\n    ] ,\n</code></pre>"},{"location":"manifest/#additionaltype","title":"additionalType","text":"<p>Where a </p>"},{"location":"manifest/#tools","title":"Tools","text":""},{"location":"manifest/#prezmanifest-github-pypi","title":"prezmanifest - GitHub, PyPI","text":"<p>The prezmanifest command line tool and Python package, available on GitHub and on PyPI, provides a number of functions to work with Prez Manifests. The functions provided are:</p> <ul> <li>validate - validate a Manifest file and contents</li> <li>label - check Manifest contents for unlabelled elements</li> <li>document - create certain forms of documentation</li> <li>load - load a Manifest's content into a file or DB</li> <li>sync - synchronise a Manifest's contents with a DB</li> </ul> <p>See the package's repository for installation and use details. </p>"},{"location":"manifest/#shacl-validation","title":"SHACL validation","text":"<p>The preferred way to perform validation of a Prez Manifest file is to use the prezmanifest tool's validate function, as listed above. Hoever, you can also perform validation of a manifest - the manifest file only, not the content it refers to, using any one of a number of SHACL validators. </p> <p>See these notes for a listing of general-purpose SHACL validation tools:</p> <ul> <li>ABIS standard's notes on SHACL tooling &amp; validation</li> </ul>"},{"location":"manifest/#annex-a-diagram-breakdown","title":"Annex A: Diagram Breakdown","text":""},{"location":"manifest/#manifest-resourcedescriptor","title":"<code>Manifest</code> &amp; <code>ResourceDescriptor</code>","text":"<pre><code>graph LR\n  style Manifest fill:#FF90BB,stroke:#666,stroke-width:2px\n  Manifest --1:1-N--&gt; ResourceDescriptor;\n  style ResourceDescriptor fill:#FFC1DA,stroke:#666,stroke-width:2px\n  style artifact fill:#F8F8E1,stroke:#666,stroke-width:2px \n  ResourceDescriptor --1:1-N--&gt; artifact;\n  subgraph main\n  ResourceDescriptor --1:1--&gt; hasRole;\n  ResourceDescriptor --1:0-N--&gt; conformsTo;\n  ResourceDescriptor --1:0-1--&gt; additionalType;\n  ResourceDescriptor --1:0-1--&gt; sync;\n  end</code></pre> <p>A <code>Manifest</code> must indicate at least one <code>ResourceDescriptor</code>.</p> <p><code>ResourceDescriptor</code> instances MUST have the predicates of:</p> <ul> <li><code>hasRole</code> - exactly 1</li> <li><code>hasArtifact</code>- at least 1</li> </ul> <p><code>ResourceDescriptor</code> instances MAY have the predicates of:</p> <ul> <li><code>conformsTo</code> - at most 1</li> <li><code>additionalType</code> - at most 1</li> <li><code>sync</code> - at most 1. If present, value must be <code>false</code>, e.g. <code>true</code> is default</li> </ul>"},{"location":"manifest/#artifact-description","title":"<code>Artifact</code> - description","text":"<pre><code>graph LR\n  style artifact fill:#F8F8E1,stroke:#666,stroke-width:2px  </code></pre> <pre><code>graph LR\n  style artifact fill:#F8F8E1,stroke:#666,stroke-width:2px  \n  subgraph main\n  artifact --1:0-N--&gt; conformsTo;\n  artifact --1:0-1--&gt; additionalType;\n  artifact --1:0-1--&gt; sync;\n  end\n  subgraph artifact-only\n  artifact --1:0-1--&gt; mainEntity;\n  artifact --1:0-1--&gt; contentLocation;\n  end</code></pre> <p>The value for the <code>hasArtifact</code> predicate can be either:</p> <ul> <li>a literal, with no further predicates of its own</li> <li>a node (likely a Blank Node) </li> </ul> <p>If a node, it MUST have:</p> <ul> <li><code>contentLocation</code> - exactly 1</li> <li><code>mainEntity</code> - exactly 1</li> </ul> <p>If a node, it MAY have:</p> <ul> <li><code>conformsTo</code> - at most 1</li> <li><code>additionalType</code> - at most 1</li> <li><code>sync</code> - at most 1. If present, value must be <code>false</code>, e.g. <code>true</code> is default</li> </ul>"},{"location":"manifest/#artifact-versioning_1","title":"<code>Artifact</code> - versioning","text":"<p>If a node, an <code>Artifact</code> MAY have:</p> <ul> <li><code>dateModified</code> - at most 1</li> <li><code>versionIRI</code> - at most 1</li> <li><code>version</code> - at most 1</li> </ul> <pre><code>graph LR\n  style artifact fill:#F8F8E1,stroke:#666,stroke-width:2px  \n  subgraph versioning\n  artifact --1:0-1--&gt; dateModified;\n  artifact --1:0-1--&gt; versionIRI;\n  artifact --1:0-1--&gt; version;\n  end</code></pre>"},{"location":"manifest/#annex-b-manifest-validator","title":"Annex B: Manifest Validator","text":"<pre><code>PREFIX owl: &lt;http://www.w3.org/2002/07/owl#&gt;\nPREFIX prez: &lt;https://prez.dev/&gt;\nPREFIX prof: &lt;http://www.w3.org/ns/dx/prof/&gt;\nPREFIX rdf: &lt;http://www.w3.org/1999/02/22-rdf-syntax-ns#&gt;\nPREFIX schema: &lt;https://schema.org/&gt;\nPREFIX sh: &lt;http://www.w3.org/ns/shacl#&gt;\nPREFIX skos: &lt;http://www.w3.org/2004/02/skos/core#&gt;\nPREFIX val: &lt;https://prez.dev/manifest-validator/&gt;\nPREFIX xsd: &lt;http://www.w3.org/2001/XMLSchema#&gt;\n\n&lt;https://prez.dev/manifest-validator&gt;\n    a owl:Ontology ;\n    owl:versionIRI val:0.5.0 ;\n    owl:versionInfo \"\"\"0.5.0: Handles artifacts as objects with predicates, not just literals (file paths)\n\n0.4.0: First public version\"\"\" ;\n    schema:creator &lt;https://orcid.org/0000-0002-8742-7730&gt; ;\n    schema:dateCreated \"2024-11-29\"^^xsd:date ;\n    schema:dateModified \"2025-01-26\"^^xsd:date ;\n    schema:definition \"The SHACL Shapes Validator for the Prez Ontology Manifest Model\"@en ;\n    schema:name \"Prez Manifest Validator\" ;\n    schema:publisher &lt;https://kurrawong.ai&gt; ;\n.\n\nval:ShapeN01\n    a sh:NodeShape ;\n    sh:property val:ShapeP01 ;\n    sh:targetClass prez:Manifest ;\n.\n\nval:ShapeN02\n    a sh:NodeShape ;\n    sh:property\n        val:ShapeP02 ,\n        val:ShapeP03 ,\n        val:ShapeP04 ,\n        val:ShapeP05 ;\n    sh:targetObjectsOf prof:hasResource ;\n.\n\nval:ShapeP01\n    a sh:PropertyShape ;\n    sh:nodeKind sh:BlankNodeOrIRI ;\n    sh:message \"ShapeP01: You must supply at least one value for prof:hasResource for a prez:Manifest and it must be either a Blank Node or an IRI\" ;\n    sh:minCount 1 ;\n    sh:path prof:hasResource ;\n.\n\nval:ShapeP02\n    a sh:PropertyShape ;\n    sh:message \"ShapeP02: You must supply at least one value for prof:hasArtifact for a prez:Manifest's Resource Descriptors and each must be a string that can be interpreted as a file path, either relative to the manifest file, or an absolute system path or a URL or a Blank Node with a schema:contentLocation and schema:mainEntity predicates\" ;\n    sh:minCount 1 ;\n    sh:or (\n        [ sh:nodeKind sh:Literal ]\n        [ sh:nodeKind sh:BlankNode ]\n    ) ;\n    sh:path prof:hasArtifact ;\n.\n\nval:ShapeN04\n    a sh:NodeShape ;\n    sh:message \"ShapeN04: If you supplied a prof:hasArtifact for a prez:Manifest's Resource Descriptors that indicated a Blank Node, the Blank Node must contain exactly one schema:contentLocation and exactly one schema:mainEntity predicates\" ;\n    sh:targetObjectsOf prof:hasArtifact ;\n    sh:or (\n        [ sh:nodeKind sh:Literal ]\n        [\n            sh:nodeKind sh:BlankNode ;\n            sh:property [\n                sh:path schema:contentLocation ;\n                sh:nodeKind sh:Literal ;\n                sh:minCount 1 ;\n                sh:maxCount 1 ;\n                sh:message \"ShapeN04 P01: You supplied a prof:hasArtifact value as Blank Node, the Blank Node so it must contain exactly exactly one schema:contentLocation predicate\" ;\n            ] ,\n            [\n                sh:path schema:mainEntity ;\n                sh:nodeKind sh:IRI ;\n                sh:minCount 1 ;\n                sh:maxCount 1 ;\n                sh:message \"ShapeN04 P02: You supplied a prof:hasArtifact value as Blank Node, the Blank Node so it must contain exactly exactly one schema:mainEntity predicate\" ;\n            ] ;\n        ]\n    ) ;\n.\n\nval:ShapeP03\n    a sh:PropertyShape ;\n    sh:maxCount 1 ;\n    sh:message \"ShapeP03: You must supply exactly one value for prof:hasRole for a prez:Manifest's Resource Descriptors with the value selected from the Prez Manifest Resource Roles Vocabulary\" ;\n    sh:minCount 1 ;\n    sh:nodeKind sh:IRI ;\n    sh:path prof:hasRole ;\n.\n\nval:ShapeP04\n    a sh:PropertyShape ;\n    sh:maxCount 1 ;\n    sh:message \"ShapeP04: If you supply a schema:description for a prez:Manifest's Resource Descriptors, it must be either a plain string or a langString literal\" ;\n    sh:or (\n        [ sh:datatype xsd:string ]\n        [ sh:datatype rdf:langString ]\n    ) ;\n    sh:path schema:description ;\n.\n\nval:ShapeP05\n    a sh:PropertyShape ;\n    sh:maxCount 1 ;\n    sh:message \"ShapeP05: If you supply a schema:name for a prez:Manifest's Resource Descriptors, it must be either a plain string or a langString literal\" ;\n    sh:or (\n        [ sh:datatype xsd:string ]\n        [ sh:datatype rdf:langString ]\n    ) ;\n    sh:path schema:name ;\n.\n\nval:ShapeN03\n    a sh:NodeShape ;\n    sh:targetObjectsOf prof:hasRole ;\n    sh:property [\n        a sh:PropertyShape ;\n        sh:minCount 1 ;\n        sh:maxCount 1 ;\n        sh:path skos:inScheme ;\n    ] ;\n.\n\nval:0.5.0\n    schema:name \"0.5.0\" ;\n.\n\n&lt;https://orcid.org/0000-0002-8742-7730&gt;\n    a schema:Person ;\n    schema:email \"nick@kurrawong.ai\"^^xsd:anyURI ;\n    schema:identifier \"https://orcid.org/0000-0002-8742-7730\"^^xsd:anyURI ;\n    schema:memberOf &lt;https://kurrawong.ai&gt; ;\n    schema:name \"Nicholas J. Car\" ;\n.\n\n&lt;https://kurrawong.ai&gt;\n    a schema:Organization ;\n    schema:name \"KurrawongAI\" ;\n    schema:url \"https://kurrawong.ai\"^^xsd:anyURI ;\n.\n</code></pre>"},{"location":"mrr/","title":"Manifest Resource Roles Vocabulary","text":"<p>This roles vocabulary contains the allowed <code>Roles</code> that a resource, described within a <code>ResourceDescriptor</code>, can play with respect to a <code>Manifest</code>.</p>"},{"location":"mrr/#identifier","title":"Identifier","text":"<p>The IRI of this vocabulary is:</p> <ul> <li><code>https://prez.dev/ManifestResourceRoles</code></li> </ul> <p>The vocab namespace is <code>https://prez.dev/ManifestResourceRoles/</code>.</p> <p>The recommended namespace prefix is <code>mrr</code>.</p>"},{"location":"mrr/#human-readable","title":"Human-readable","text":"<p>The human-readable form of this vocabulary is as follows:</p> Concept IRI Label Definition Parent <code>mrr:CatalogueData</code> Catalogue Data Data for the catalogue, usually a Catalogue, including the identity of it and each item fo resource - <code>mrr:ResourceData</code> Resource Data Data for the resource of the catalogue - <code>mrr:CatalogueAndResourceModel</code> Catalogue &amp; Resource Model The default model for the catalogue and the resource. Must be a set of SHACL Shapes - <code>mrr:CatalogueModel</code> Catalogue Model The default model for the catalogue. Must be a set of SHACL Shapes <code>mrr:CatalogueAndResourceModel</code> <code>mrr:ResourceModel</code> Resource Model The default model for the resource. Must be a set of SHACL Shapes <code>mrr:CatalogueAndResourceModel</code> <code>mrr:CompleteCatalogueAndResourceLabels</code> Complete Resource &amp; Catalogue Labels All the labels - possibly including names, descriptions &amp; seeAlso links - for the Catalogue and Resource objects - <code>mrr:IncompleteCatalogueAndResourceLabels</code> Incomplete Resource &amp; Catalogue Labels Some of the labels - possibly including names, descriptions &amp; seeAlso links - for the Catalogue and Resource objects -"},{"location":"mrr/#machine-readable","title":"Machine-readable","text":"<p>The machine-readable form of this vocabulary, in RDF's Turtle syntax, is:</p> <pre><code>PREFIX cs: &lt;https://prez.dev/ManifestResourceRoles&gt;\nPREFIX : &lt;https://prez.dev/ManifestResourceRoles/&gt;\nPREFIX owl: &lt;http://www.w3.org/2002/07/owl#&gt;\nPREFIX rdfs: &lt;http://www.w3.org/2000/01/rdf-schema#&gt;\nPREFIX schema: &lt;https://schema.org/&gt;\nPREFIX skos: &lt;http://www.w3.org/2004/02/skos/core#&gt;\nPREFIX xsd: &lt;http://www.w3.org/2001/XMLSchema#&gt;\n\n\n:CompleteCatalogueAndResourceLabels\n    a skos:Concept ;\n    skos:definition \"All the labels - possibly including names, descriptions &amp; seeAlso links - for the Catalogue and Resource objects\" ;\n    skos:inScheme cs: ;\n    skos:prefLabel \"Complete Catalogue and Resource Labels\" ;\n.\n\n:CatalogueAndResourceModel\n    a skos:Concept ;\n    skos:definition \"The default model for the container and the content. Must be a set of SHACL Shapes\" ;\n    skos:inScheme cs: ;\n    skos:prefLabel \"Catalogue &amp; Resource Model\" ;\n.\n\n:CatalogueData\n    a skos:Concept ;\n    skos:definition \"Data for the container, usually a Catalogue, including the identity of it and each item fo content\" ;\n    skos:inScheme cs: ;\n    skos:prefLabel \"Catalogue Data\" ;\n.\n\n:CatalogueModel\n    a skos:Concept ;\n    skos:definition \"The default model for the container. Must be a set of SHACL Shapes\" ;\n    skos:inScheme cs: ;\n    skos:prefLabel \"Catalogue Model\" ;\n.\n\n:ResourceData\n    a skos:Concept ;\n    skos:definition \"Data for the content of the container\" ;\n    skos:inScheme cs: ;\n    skos:prefLabel \"Resource Data\" ;\n.\n\n:ResourceModel\n    a skos:Concept ;\n    skos:definition \"The default model for the content. Must be a set of SHACL Shapes\" ;\n    skos:inScheme cs: ;\n    skos:prefLabel \"Resource Model\" ;\n.\n\n:IncompleteCatalogueAndResourceLabels\n    a skos:Concept ;\n    skos:definition \"Some of the labels - possibly including names, descriptions &amp; seeAlso links - for the Catalogue and Resource objects\" ;\n    skos:inScheme cs: ;\n    skos:prefLabel \"Incomplete Catalogue and Resource Labels\" ;\n.\n\n&lt;https://kurrawong.ai&gt;\n    a schema:Organization ;\n    schema:name \"KurrawongAI\" ;\n    schema:url \"https://kurrawong.ai\"^^xsd:anyURI ;\n.\n\n:1.0.0\n    rdfs:label \"1.0.0\" ;\n.\n\ncs:\n    a skos:ConceptScheme ;\n    owl:versionIRI :1.0.0 ;\n    owl:versionInfo \"1.0.0: First public version\" ;\n    skos:definition \"This vocabulary is a test vocabulary showing the use of images within Concept definitions\"@en ;\n    skos:hasTopConcept\n        :CompleteCatalogueAndResourceLabels ,\n        :CatalogueAndResourceModel ,\n        :CatalogueData ,\n        :CatalogueModel ,\n        :ResourceData ,\n        :IncompleteCatalogueAndResourceLabels ;\n    skos:historyNote \"Create in 2024 for Prez data loading\" ;\n    skos:prefLabel \"Manifest Resource Roles Vocabulary\" ;\n    schema:creator &lt;https://kurrawong.ai&gt; ;\n    schema:dateCreated \"2024-11-29\"^^xsd:date ;\n    schema:dateModified \"2024-12-17\"^^xsd:date ;\n    schema:publisher &lt;https://kurrawong.ai&gt; ;\n.\n</code></pre>"},{"location":"ont/","title":"Prez Ontology","text":"<p>Here will soon be the ontology!</p> <p>You should probably look at the Manifest Model for now...</p>"}]}